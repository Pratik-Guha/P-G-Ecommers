import Footer from "@/app/components/Footer";
import Header from "@/app/components/Header";
import ThemeToggleButton from "@/app/toggle";
import { admin, adminDB } from "@/lib/firebase_admin";
import Link from "next/link";

export const metadata={
    title:"Cash on Delivery",
    description:"Generated by create next app",
}
const fetchCheckout=async (checkoutId)=>{
    
   
     const list=await adminDB
     .collectionGroup("checkout_sessions_cod")
     .where("id","==",checkoutId)
     .get();
 
     if(list.docs.length===0){
         throw new Error("Invalid Checkout ID")
     }
     return list.docs[0].data();
   

}


const processOrder=async ({checkout})=>{
    
        const order =await adminDB.doc(`orders/${checkout?.id}`).get();
    
        if(order.exists){
            return false;
        }
        // console.log("If the upper thing is false then this will run")
        const uid=checkout?.metadata?.uid;
        await adminDB.doc(`orders/${checkout?.id}`).set({ 
            checkout:checkout,
            uid:uid,
            id:checkout?.id,
            paymentMode:"cod",
            timestampCreate: admin.firestore.Timestamp.now(),
        })
        const productList=checkout?.line_items?.map(item=>{
            return {
                productId:item?.price_data?.product_data?.metadata?.productId,
                quantity:item?.quantity
            }
        });
    
        const user =await adminDB.doc(`users/${uid}`).get();
    
        const productIdList=productList?.map(item=>item?.productId);
    
        const newCartList=(user?.data()?.carts ?? []).filter(
            item=>!productIdList?.includes(item?.id)
        );
    
        await adminDB.doc(`users/${uid}`).set(
            {
                carts:newCartList,
            },
            {merge:true}
        )
    
        const batch=adminDB.batch();
    
        productList?.forEach(item=>{
            batch.update(adminDB.doc(
                `products/${item?.productId}`),{
                    orders: admin.firestore.FieldValue.increment(item?.quantity),
                })
        })
    
        await batch.commit();
    
        return true;
    
}
export default async function Page({searchParams}){
    const {checkout_id}=searchParams;
    const checkout=await fetchCheckout(checkout_id);
    const result =await processOrder({checkout});
    return (
        <main>
        <Header/>
        <ThemeToggleButton/>
        <section className=" min-h-screen gap-4 flex flex-col items-center justify-center">
            <div className="flex justify-center w-full">
            <img src={"https://images.pexels.com/photos/5926431/pexels-photo-5926431.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2"} className="h-72" alt="Empty Cart" />
            </div>
            <h1 className="text-2xl font-semibold">Your Order Placed Successfully</h1>
            <div className="flex items-center gap-4">
                <Link href="/account">
                <button className="hmbutton">Go to Orders Page</button>
                </Link>
                
            </div>
        </section>
        <Footer/>
        </main>
    )
}